[
  {
    "objectID": "slides/quarto/basic-quarto.html",
    "href": "slides/quarto/basic-quarto.html",
    "title": "Basic quarto",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished presentation. To learn more about Quarto presentations see https://quarto.org/docs/presentations/."
  },
  {
    "objectID": "slides/quarto/basic-quarto.html#quarto",
    "href": "slides/quarto/basic-quarto.html#quarto",
    "title": "Basic quarto",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished presentation. To learn more about Quarto presentations see https://quarto.org/docs/presentations/."
  },
  {
    "objectID": "slides/quarto/basic-quarto.html#bullets",
    "href": "slides/quarto/basic-quarto.html#bullets",
    "title": "Basic quarto",
    "section": "Bullets",
    "text": "Bullets\nWhen you click the Render button a document will be generated that includes:\n\nContent authored with markdown\nOutput from executable code"
  },
  {
    "objectID": "slides/quarto/basic-quarto.html#code",
    "href": "slides/quarto/basic-quarto.html#code",
    "title": "Basic quarto",
    "section": "Code",
    "text": "Code\nWhen you click the Render button a presentation will be generated that includes both content and the output of embedded code. You can embed code like this:\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "slides/quarto/index.html",
    "href": "slides/quarto/index.html",
    "title": "Test",
    "section": "",
    "text": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum."
  },
  {
    "objectID": "slides/quarto/index.html#slide-1",
    "href": "slides/quarto/index.html#slide-1",
    "title": "Quarto",
    "section": "Slide 1",
    "text": "Slide 1\nLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum."
  },
  {
    "objectID": "slides/quarto/index.html#slide-2",
    "href": "slides/quarto/index.html#slide-2",
    "title": "Quarto",
    "section": "Slide 2",
    "text": "Slide 2\n\n\n\nindex.qmd\n---\ntitle: \"Basic quarto\"\nformat: html\n---\n\n## Quarto\n\nQuarto enables you to weave together content and executable code into a finished presentation. To learn more about Quarto presentations see &lt;https://quarto.org/docs/presentations/&gt;.\n\n## Bullets\n\nWhen you click the **Render** button a document will be generated that includes:\n\n-   Content authored with markdown\n-   Output from executable code\n\n## Code\n\nWhen you click the **Render** button a presentation will be generated that includes both content and the output of embedded code. You can embed code like this:\n\n```{r}\n1 + 1\n```\n\n\n\nindex.html"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "slides/quarto-intro/quarto-example.html",
    "href": "slides/quarto-intro/quarto-example.html",
    "title": "Hello, Quarto",
    "section": "",
    "text": "Quarto is a publishing system that allows you to create documents, presentations, websites, and more using Markdown syntax and additional tools."
  },
  {
    "objectID": "slides/quarto-intro/quarto-example.html#quarto",
    "href": "slides/quarto-intro/quarto-example.html#quarto",
    "title": "Basic quarto",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished presentation. To learn more about Quarto presentations see https://quarto.org/docs/presentations/."
  },
  {
    "objectID": "slides/quarto-intro/quarto-example.html#bullets",
    "href": "slides/quarto-intro/quarto-example.html#bullets",
    "title": "Basic quarto",
    "section": "Bullets",
    "text": "Bullets\nWhen you click the Render button a document will be generated that includes:\n\nContent authored with markdown\nOutput from executable code"
  },
  {
    "objectID": "slides/quarto-intro/quarto-example.html#code",
    "href": "slides/quarto-intro/quarto-example.html#code",
    "title": "Basic quarto",
    "section": "Code",
    "text": "Code\nWhen you click the Render button a presentation will be generated that includes both content and the output of embedded code. You can embed code like this:\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "slides/quarto-intro/index.html",
    "href": "slides/quarto-intro/index.html",
    "title": "Introduction to Quarto",
    "section": "",
    "text": "index.qmd\n---\ntitle: \"Hello, Quarto\"\ndate: 2024-10-28\nauthor:\n  - name: Thinh Ong\n    url: https://drthinhong.com/\n    orcid: 0000-0001-6772-9291\nformat: html\nnumber-sections: true\nnavbar: false\n---\n\n## Introduction to Quarto\n\nQuarto is a publishing system that allows you to create documents, presentations, websites, and more using Markdown syntax and additional tools. \n\n## Header Levels\n\nQuarto supports multiple header levels to create a hierarchical structure in your document. For example:\n\n- Level 1 header: `# Header`\n- Level 2 header: `## Subheader`\n- Level 3 header: `### Sub-subheader`\n\n### Nested Headers\n\nUsing headers, you can create nested sections to structure your document in a clear and organized way.\n\n## Inline Text Formatting\n\nYou can format your text inline to add emphasis or other styling options.\n\n- **Bold text**: `**bold**`\n- *Italic text*: `*italic*`\n- Inline `code`: `` `code` ``\n\n&gt; Blockquotes can be used to highlight important information or quotes by adding `&gt; ` at the beginning of a line.\n\n## Lists\n\nQuarto supports both ordered and unordered lists.\n\n### Unordered List\n\nTo create an unordered list, use an asterisk `*` before each item:\n\n* First item\n* Second item\n* Third item\n\n### Ordered List\n\nTo create an ordered list, use numbers before each item:\n\n1. First item\n2. Second item\n3. Third item\n\n## Links and images\n\n&lt;http://example.com&gt;\n\n[linked phrase](http://example.com)\n\n![optional caption text](../oucru-logo.png)\n\n## Tables\n\n| First Header | Second Header |\n|--------------|---------------|\n| Content Cell | Content Cell  |\n| Content Cell | Content Cell  |\n\n## Code block\n\nQuarto also supports code blocks, making it easy to include and execute code within your document. Here’s an example of a code block to create a simple plot using R:\n\n```{r}\n#| fig-width: 4\n#| fig-height: 3\n#| out-width: \"100%\"\nx &lt;- c(1, 2, 3, 4, 5)\ny &lt;- c(1, 4, 9, 16, 25)\n\nplot(x, y, type = \"o\", col = \"blue\", main = \"Simple plot\", xlab = \"x\", ylab = \"y\")\n```\n\n## Footnotes\n\nFootnotes can be added inline to provide additional information or references. Here's an example of a footnote in Quarto: ^[This is an example footnote.]\n\n\n\nindex.html"
  },
  {
    "objectID": "slides/quarto-intro/index.html#quarto",
    "href": "slides/quarto-intro/index.html#quarto",
    "title": "Introduction to Quarto",
    "section": "Quarto",
    "text": "Quarto\n\n\n\nindex.qmd\n---\ntitle: \"Hello, Quarto\"\ndate: 2024-10-28\nauthor:\n  - name: Thinh Ong\n    url: https://drthinhong.com/\n    orcid: 0000-0001-6772-9291\nformat: html\nnavbar: false\n---\n\n## Introduction to Quarto\n\nQuarto is a publishing system that allows you to create documents, presentations, websites, and more using Markdown syntax and additional tools. \n\n## Header Levels\n\nQuarto supports multiple header levels to create a hierarchical structure in your document. For example:\n\n- Level 1 header: `# Header`\n- Level 2 header: `## Subheader`\n- Level 3 header: `### Sub-subheader`\n\n### Nested Headers\n\nUsing headers, you can create nested sections to structure your document in a clear and organized way.\n\n## Inline Text Formatting\n\nYou can format your text inline to add emphasis or other styling options.\n\n- **Bold text**: `**bold**`\n- *Italic text*: `*italic*`\n- Inline `code`: `` `code` ``\n\n&gt; Blockquotes can be used to highlight important information or quotes by adding `&gt; ` at the beginning of a line.\n\n## Lists\n\nQuarto supports both ordered and unordered lists.\n\n### Unordered List\n\nTo create an unordered list, use an asterisk `*` before each item:\n\n* First item\n* Second item\n* Third item\n\n### Ordered List\n\nTo create an ordered list, use numbers before each item:\n\n1. First item\n2. Second item\n3. Third item\n\n## Code Block Example: Simple Plot\n\nQuarto also supports code blocks, making it easy to include and execute code within your document. Here’s an example of a code block to create a simple plot using R:\n\n```{r}\n#| fig-width: 4\n#| fig-height: 3\n#| out-width: \"100%\"\nx &lt;- c(1, 2, 3, 4, 5)\ny &lt;- c(1, 4, 9, 16, 25)\n\nplot(x, y, type = \"o\", col = \"blue\", main = \"Simple plot\", xlab = \"x\", ylab = \"y\")\n```\n\n## Footnotes\n\nFootnotes can be added inline to provide additional information or references. Here's an example of a footnote in Quarto: ^[This is an example footnote.]\n\n\n\nindex.html"
  },
  {
    "objectID": "slides/quarto-intro/index.html#yaml-header",
    "href": "slides/quarto-intro/index.html#yaml-header",
    "title": "Introduction to Quarto",
    "section": "YAML header",
    "text": "YAML header\n\n\n\nindex.qmd\n---\ntitle: \"Hello, Quarto\"\ndate: 2024-10-28\nauthor:\n  - name: Thinh Ong\n    url: https://drthinhong.com/\n    orcid: 0000-0001-6772-9291\nformat: html\nnavbar: false\n---\n\n\n\nindex.html"
  },
  {
    "objectID": "slides/quarto-intro/index.html#markdown-syntax",
    "href": "slides/quarto-intro/index.html#markdown-syntax",
    "title": "Introduction to Quarto",
    "section": "Markdown syntax",
    "text": "Markdown syntax"
  },
  {
    "objectID": "slides/quarto-intro/quarto-example.html#header-levels",
    "href": "slides/quarto-intro/quarto-example.html#header-levels",
    "title": "Hello, Quarto",
    "section": "2 Header Levels",
    "text": "2 Header Levels\nQuarto supports multiple header levels to create a hierarchical structure in your document. For example:\n\nLevel 1 header: # Header\nLevel 2 header: ## Subheader\nLevel 3 header: ### Sub-subheader\n\n\n2.1 Nested Headers\nUsing headers, you can create nested sections to structure your document in a clear and organized way."
  },
  {
    "objectID": "slides/quarto-intro/quarto-example.html#inline-text-formatting",
    "href": "slides/quarto-intro/quarto-example.html#inline-text-formatting",
    "title": "Hello, Quarto",
    "section": "3 Inline Text Formatting",
    "text": "3 Inline Text Formatting\nYou can format your text inline to add emphasis or other styling options.\n\nBold text: **bold**\nItalic text: *italic*\nInline code: `code`\n\n\nBlockquotes can be used to highlight important information or quotes by adding &gt; at the beginning of a line."
  },
  {
    "objectID": "slides/quarto-intro/quarto-example.html#lists",
    "href": "slides/quarto-intro/quarto-example.html#lists",
    "title": "Hello, Quarto",
    "section": "4 Lists",
    "text": "4 Lists\nQuarto supports both ordered and unordered lists.\n\n4.1 Unordered List\nTo create an unordered list, use an asterisk * before each item:\n\nFirst item\nSecond item\nThird item\n\n\n\n4.2 Ordered List\nTo create an ordered list, use numbers before each item:\n\nFirst item\nSecond item\nThird item"
  },
  {
    "objectID": "slides/quarto-intro/quarto-example.html#code-block-example-simple-plot",
    "href": "slides/quarto-intro/quarto-example.html#code-block-example-simple-plot",
    "title": "Hello, Quarto",
    "section": "5 Code Block Example: Simple Plot",
    "text": "5 Code Block Example: Simple Plot\nQuarto also supports code blocks, making it easy to include and execute code within your document. Here’s an example of a code block to create a simple plot using R:\n\nx &lt;- c(1, 2, 3, 4, 5)\ny &lt;- c(1, 4, 9, 16, 25)\n\nplot(x, y, type = \"o\", col = \"blue\", main = \"Simple plot\", xlab = \"x\", ylab = \"y\")"
  },
  {
    "objectID": "slides/quarto-intro/quarto-example.html#footnotes",
    "href": "slides/quarto-intro/quarto-example.html#footnotes",
    "title": "Hello, Quarto",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nThis is an example footnote.↩︎"
  },
  {
    "objectID": "slides/quarto-intro/quarto-example.html#introduction-to-quarto",
    "href": "slides/quarto-intro/quarto-example.html#introduction-to-quarto",
    "title": "Hello, Quarto",
    "section": "",
    "text": "Quarto is a publishing system that allows you to create documents, presentations, websites, and more using Markdown syntax and additional tools."
  },
  {
    "objectID": "slides/quarto-intro/index.html#quarto-markdown-to-output",
    "href": "slides/quarto-intro/index.html#quarto-markdown-to-output",
    "title": "Introduction to Quarto",
    "section": "Quarto markdown to output",
    "text": "Quarto markdown to output\n\n\n\nindex.qmd\n---\ntitle: \"Hello, Quarto\"\ndate: 2024-10-28\nauthor:\n  - name: Thinh Ong\n    url: https://drthinhong.com/\n    orcid: 0000-0001-6772-9291\nformat: html\nnumber-sections: true\nnavbar: false\n---\n\n## Introduction to Quarto\n\nQuarto is a publishing system that allows you to create documents, presentations, websites, and more using Markdown syntax and additional tools. \n\n## Header Levels\n\nQuarto supports multiple header levels to create a hierarchical structure in your document. For example:\n\n- Level 1 header: `# Header`\n- Level 2 header: `## Subheader`\n- Level 3 header: `### Sub-subheader`\n\n### Nested Headers\n\nUsing headers, you can create nested sections to structure your document in a clear and organized way.\n\n## Inline Text Formatting\n\nYou can format your text inline to add emphasis or other styling options.\n\n- **Bold text**: `**bold**`\n- *Italic text*: `*italic*`\n- Inline `code`: `` `code` ``\n\n&gt; Blockquotes can be used to highlight important information or quotes by adding `&gt; ` at the beginning of a line.\n\n## Lists\n\nQuarto supports both ordered and unordered lists.\n\n### Unordered List\n\nTo create an unordered list, use an asterisk `*` before each item:\n\n* First item\n* Second item\n* Third item\n\n### Ordered List\n\nTo create an ordered list, use numbers before each item:\n\n1. First item\n2. Second item\n3. Third item\n\n## Code Block Example: Simple Plot\n\nQuarto also supports code blocks, making it easy to include and execute code within your document. Here’s an example of a code block to create a simple plot using R:\n\n```{r}\n#| fig-width: 4\n#| fig-height: 3\n#| out-width: \"100%\"\nx &lt;- c(1, 2, 3, 4, 5)\ny &lt;- c(1, 4, 9, 16, 25)\n\nplot(x, y, type = \"o\", col = \"blue\", main = \"Simple plot\", xlab = \"x\", ylab = \"y\")\n```\n\n## Footnotes\n\nFootnotes can be added inline to provide additional information or references. Here's an example of a footnote in Quarto: ^[This is an example footnote.]\n\n\n\nindex.html"
  },
  {
    "objectID": "slides/quarto-intro/index.html#introduction-to-quarto",
    "href": "slides/quarto-intro/index.html#introduction-to-quarto",
    "title": "Hello, Quarto",
    "section": "Introduction to Quarto",
    "text": "Introduction to Quarto\nQuarto is a publishing system that allows you to create documents, presentations, websites, and more using Markdown syntax and additional tools."
  },
  {
    "objectID": "slides/quarto-intro/index.html#header-levels",
    "href": "slides/quarto-intro/index.html#header-levels",
    "title": "Hello, Quarto",
    "section": "Header Levels",
    "text": "Header Levels\nQuarto supports multiple header levels to create a hierarchical structure in your document. For example:\n\nLevel 1 header: # Header\nLevel 2 header: ## Subheader\nLevel 3 header: ### Sub-subheader\n\nNested Headers\nUsing headers, you can create nested sections to structure your document in a clear and organized way."
  },
  {
    "objectID": "slides/quarto-intro/index.html#inline-text-formatting",
    "href": "slides/quarto-intro/index.html#inline-text-formatting",
    "title": "Hello, Quarto",
    "section": "Inline Text Formatting",
    "text": "Inline Text Formatting\nYou can format your text inline to add emphasis or other styling options.\n\nBold text: **bold**\nItalic text: *italic*\nInline code: `code`\n\n\nBlockquotes can be used to highlight important information or quotes by adding &gt; at the beginning of a line."
  },
  {
    "objectID": "slides/quarto-intro/index.html#lists",
    "href": "slides/quarto-intro/index.html#lists",
    "title": "Hello, Quarto",
    "section": "Lists",
    "text": "Lists\nQuarto supports both ordered and unordered lists.\nUnordered List\nTo create an unordered list, use an asterisk * before each item:\n\nFirst item\nSecond item\nThird item\n\nOrdered List\nTo create an ordered list, use numbers before each item:\n\nFirst item\nSecond item\nThird item"
  },
  {
    "objectID": "slides/quarto-intro/index.html#code-block-example-simple-plot",
    "href": "slides/quarto-intro/index.html#code-block-example-simple-plot",
    "title": "Hello, Quarto",
    "section": "Code Block Example: Simple Plot",
    "text": "Code Block Example: Simple Plot\nQuarto also supports code blocks, making it easy to include and execute code within your document. Here’s an example of a code block to create a simple plot using R:\n```{r}\n#| fig-width: 4\n#| fig-height: 3\n#| out-width: \"100%\"\nx &lt;- c(1, 2, 3, 4, 5)\ny &lt;- c(1, 4, 9, 16, 25)\n\nplot(x, y, type = \"o\", col = \"blue\", main = \"Simple plot\", xlab = \"x\", ylab = \"y\")\n```"
  },
  {
    "objectID": "slides/quarto-intro/index.html#footnotes",
    "href": "slides/quarto-intro/index.html#footnotes",
    "title": "Hello, Quarto",
    "section": "Footnotes",
    "text": "Footnotes\nFootnotes can be added inline to provide additional information or references. Here’s an example of a footnote in Quarto: 1"
  },
  {
    "objectID": "slides/quarto-intro/index.html#html-output",
    "href": "slides/quarto-intro/index.html#html-output",
    "title": "Introduction to Quarto",
    "section": "HTML output",
    "text": "HTML output\n\n\n\nindex.qmd\n---\ntitle: \"Hello, Quarto\"\ndate: 2024-10-28\nauthor:\n  - name: Thinh Ong\n    url: https://drthinhong.com/\n    orcid: 0000-0001-6772-9291\nformat: html\nnumber-sections: true\nnavbar: false\n---\n\n## Introduction to Quarto\n\nQuarto is a publishing system that allows you to create documents, presentations, websites, and more using Markdown syntax and additional tools. \n\n## Header Levels\n\nQuarto supports multiple header levels to create a hierarchical structure in your document. For example:\n\n- Level 1 header: `# Header`\n- Level 2 header: `## Subheader`\n- Level 3 header: `### Sub-subheader`\n\n### Nested Headers\n\nUsing headers, you can create nested sections to structure your document in a clear and organized way.\n\n## Inline Text Formatting\n\nYou can format your text inline to add emphasis or other styling options.\n\n- **Bold text**: `**bold**`\n- *Italic text*: `*italic*`\n- Inline `code`: `` `code` ``\n\n&gt; Blockquotes can be used to highlight important information or quotes by adding `&gt; ` at the beginning of a line.\n\n## Lists\n\nQuarto supports both ordered and unordered lists.\n\n### Unordered List\n\nTo create an unordered list, use an asterisk `*` before each item:\n\n* First item\n* Second item\n* Third item\n\n### Ordered List\n\nTo create an ordered list, use numbers before each item:\n\n1. First item\n2. Second item\n3. Third item\n\n## Links and images\n\n&lt;http://example.com&gt;\n\n[linked phrase](http://example.com)\n\n![optional caption text](../oucru-logo.png){fig-alt=\"OUCRU logo\"}\n\n## Tables\n\n| First Header | Second Header |\n|--------------|---------------|\n| Content Cell | Content Cell  |\n| Content Cell | Content Cell  |\n\n## Code block\n\nQuarto also supports code blocks, making it easy to include and execute code within your document. Here’s an example of a code block to create a simple plot using R:\n\n```{r}\n#| fig-width: 4\n#| fig-height: 3\n#| out-width: \"100%\"\nx &lt;- c(1, 2, 3, 4, 5)\ny &lt;- c(1, 4, 9, 16, 25)\n\nplot(x, y, type = \"o\", col = \"blue\", main = \"Simple plot\", xlab = \"x\", ylab = \"y\")\n```\n\n## Footnotes\n\nFootnotes can be added inline to provide additional information or references. Here's an example of a footnote in Quarto: ^[This is an example footnote.]\n\n\n\nindex.html"
  },
  {
    "objectID": "slides/quarto-intro/quarto-example.html#tables",
    "href": "slides/quarto-intro/quarto-example.html#tables",
    "title": "Hello, Quarto",
    "section": "6 Tables",
    "text": "6 Tables\n\n\n\nFirst Header\nSecond Header\n\n\n\n\nContent Cell\nContent Cell\n\n\nContent Cell\nContent Cell"
  },
  {
    "objectID": "slides/quarto-intro/quarto-example.html#links-and-images",
    "href": "slides/quarto-intro/quarto-example.html#links-and-images",
    "title": "Hello, Quarto",
    "section": "5 Links and images",
    "text": "5 Links and images\nhttp://example.com\nlinked phrase\n\n\n\noptional caption text"
  },
  {
    "objectID": "slides/quarto-intro/quarto-example.html#code-block",
    "href": "slides/quarto-intro/quarto-example.html#code-block",
    "title": "Hello, Quarto",
    "section": "7 Code block",
    "text": "7 Code block\nQuarto also supports code blocks, making it easy to include and execute code within your document. Here’s an example of a code block to create a simple plot using R:\n\nx &lt;- c(1, 2, 3, 4, 5)\ny &lt;- c(1, 4, 9, 16, 25)\n\nplot(x, y, type = \"o\", col = \"blue\", main = \"Simple plot\", xlab = \"x\", ylab = \"y\")"
  },
  {
    "objectID": "slides/quarto-intro/index.html#quarto-markdown-vs-output",
    "href": "slides/quarto-intro/index.html#quarto-markdown-vs-output",
    "title": "Introduction to Quarto",
    "section": "Quarto markdown vs output",
    "text": "Quarto markdown vs output\n\n\n\nindex.qmd\n---\ntitle: \"Hello, Quarto\"\ndate: 2024-10-28\nauthor:\n  - name: Thinh Ong\n    url: https://drthinhong.com/\n    orcid: 0000-0001-6772-9291\nformat: html\nnumber-sections: true\nnavbar: false\n---\n\n## Introduction to Quarto\n\nQuarto is a publishing system that allows you to create documents, presentations, websites, and more using Markdown syntax and additional tools. \n\n## Header Levels\n\nQuarto supports multiple header levels to create a hierarchical structure in your document. For example:\n\n- Level 1 header: `# Header`\n- Level 2 header: `## Subheader`\n- Level 3 header: `### Sub-subheader`\n\n### Nested Headers\n\nUsing headers, you can create nested sections to structure your document in a clear and organized way.\n\n## Inline Text Formatting\n\nYou can format your text inline to add emphasis or other styling options.\n\n- **Bold text**: `**bold**`\n- *Italic text*: `*italic*`\n- Inline `code`: `` `code` ``\n\n&gt; Blockquotes can be used to highlight important information or quotes by adding `&gt; ` at the beginning of a line.\n\n## Lists\n\nQuarto supports both ordered and unordered lists.\n\n### Unordered List\n\nTo create an unordered list, use an asterisk `*` before each item:\n\n* First item\n* Second item\n* Third item\n\n### Ordered List\n\nTo create an ordered list, use numbers before each item:\n\n1. First item\n2. Second item\n3. Third item\n\n## Links and images\n\n&lt;http://example.com&gt;\n\n[linked phrase](http://example.com)\n\n![optional caption text](../oucru-logo.png)\n\n## Tables\n\n| First Header | Second Header |\n|--------------|---------------|\n| Content Cell | Content Cell  |\n| Content Cell | Content Cell  |\n\n## Code block\n\nQuarto also supports code blocks, making it easy to include and execute code within your document. Here’s an example of a code block to create a simple plot using R:\n\n```{r}\n#| fig-width: 4\n#| fig-height: 3\n#| out-width: \"100%\"\nx &lt;- c(1, 2, 3, 4, 5)\ny &lt;- c(1, 4, 9, 16, 25)\n\nplot(x, y, type = \"o\", col = \"blue\", main = \"Simple plot\", xlab = \"x\", ylab = \"y\")\n```\n\n## Footnotes\n\nFootnotes can be added inline to provide additional information or references. Here's an example of a footnote in Quarto: ^[This is an example footnote.]\n\n\n\nindex.html"
  },
  {
    "objectID": "intro.html#about-the-course",
    "href": "intro.html#about-the-course",
    "title": "Foundation of R",
    "section": "About the course",
    "text": "About the course\nThis course is a pilot phase of a future course “R-cafe: R for reproducible research”\nIn this pilot phase, the following topics will be covered\n\nFoundation of R - introduction to working with RStudio, R and Github\nTidyverse - introduce important tools for cleaning data in R\nMarkdown/Quarto and `gtsummary` - introduce gtsummary for analysis and creating report with Markdown/Quarto"
  },
  {
    "objectID": "intro.html#about-the-course-1",
    "href": "intro.html#about-the-course-1",
    "title": "Foundation of R",
    "section": "About the course",
    "text": "About the course\nBy the end of this course, you will be able to conduct an end-to-end data analysis process on a dummy data and create a report using R and RMarkdown/Quarto\nTeaching team:\n\nHai Ho Bich (haihb@oucru.org)\nThinh Ong Phuc (thinhop@oucru.org)\nTuyen Huynh Ngoc (tuyenhn@oucru.org)\nAnh Phan Truong Quynh (anhptq@oucru.org)"
  },
  {
    "objectID": "intro.html#foundation-of-r",
    "href": "intro.html#foundation-of-r",
    "title": "Foundation of R",
    "section": "Foundation of R",
    "text": "Foundation of R\n\n\n\n\n\n\nOverview\n\n\n\nIntro to RStudio\nR project (create R project, set up renv)\nIntro to R\nGithub"
  },
  {
    "objectID": "intro.html#prerequisite",
    "href": "intro.html#prerequisite",
    "title": "Foundation of R",
    "section": "Prerequisite",
    "text": "Prerequisite\n\n\n\n\n\n\nBefore this lesson, you should have:\n\n\n\nR and RStudio installed\na Github account and Git installed"
  },
  {
    "objectID": "intro.html#r-and-rstudio",
    "href": "intro.html#r-and-rstudio",
    "title": "Foundation of R",
    "section": "R and RStudio",
    "text": "R and RStudio\nR is a programming language for statistical computing and data visualization.\nRStudio is a software designed to make working with R easier by helping you create, edit, and manage R code and projects. More formally, it is known as an Integrated Development Environment (IDE)."
  },
  {
    "objectID": "intro.html#r-and-rstudio-1",
    "href": "intro.html#r-and-rstudio-1",
    "title": "Foundation of R",
    "section": "R and RStudio",
    "text": "R and RStudio\nWhy use R?\n\nCost: R is free and open-source.\nReproducibility: Programming in R (as opposed to point-click tools such as Excel/Access) enhances reproducibility, error detection, and reduces manual workload.\nCommunity: R has a large, collaborative user base, with new tools and packages for analysis developed constantly."
  },
  {
    "objectID": "intro.html#create-project-in-rstudio",
    "href": "intro.html#create-project-in-rstudio",
    "title": "Foundation of R",
    "section": "Create Project in RStudio",
    "text": "Create Project in RStudio\nThe process of creating an R project is as followed\n\nIn the menu File > New Project…\nClick New Directory > New Project\nEnter the name for the R project directory at Directory name\nClick Browse and select the parent directory for your project directory\nClick Create Project"
  },
  {
    "objectID": "intro.html#rstudio-interface",
    "href": "intro.html#rstudio-interface",
    "title": "Foundation of R",
    "section": "RStudio interface",
    "text": "RStudio interface\n\nConsists of 4 main panes\n\nSource code: Show the content of a source code file\nConsole: Show the executed code lines and their output\nDefined variables: Show the currently defined variables\nFiles/Plot/Package/Help:\n\nFiles: for files nagivation\nPlots: show plot output\nPackages: show all the installed packages and packages being used (packages in use will have a ✓)\nHelp: show documentations for functions or packages"
  },
  {
    "objectID": "intro.html#rstudio-interface-1",
    "href": "intro.html#rstudio-interface-1",
    "title": "Foundation of R",
    "section": "RStudio interface",
    "text": "RStudio interface"
  },
  {
    "objectID": "intro.html#project-structure",
    "href": "intro.html#project-structure",
    "title": "Foundation of R",
    "section": "Project structure",
    "text": "Project structure\nA minimal R project structure will have the following format\n└── my_project\n    ├── output\n    ├── data\n    │   ├── raw\n    │   └── processed\n    └── analysis.R \nWhere\n\ndata folder contains data to by analyzed\noutput stores code output (plot, figures, etc.)\nanalysis.R is the file containing R code. There can be multiple .R files under 1 project."
  },
  {
    "objectID": "intro.html#project-structure-1",
    "href": "intro.html#project-structure-1",
    "title": "Foundation of R",
    "section": "Project structure",
    "text": "Project structure\n\nNaming convention\nSome rules of thumb for naming files and folders:\n\nDo not use diacritics (e.g. Vietnamese accent marks).\nDo not use overly long names, keep it short but meaningful.\nDo not include special characters such as /, \\, &, ,, (, )... in names. It’s best to use only letters and numbers.\nAvoid mixing uppercase and lowercase letters arbitrarily. If necessary, use naming conventions like camelCase (capitalize the first letter of each word after the first one, e.g., dataSoiHcm) or PascalCase (capitalize the first letter of all words, e.g., DataSoiHcm).\nDo not include spaces (\" \") in names. Instead, you can use camelCase, or replace spaces with - or _. For example, instead of naming a file data soi HCM 2023.xlsx, you could name it dataSoiHcm2023.xlsx, data-soi-hcm-2023.xlsx, or data_soi_hcm_2023.xlsx."
  },
  {
    "objectID": "intro.html#set-up-renv",
    "href": "intro.html#set-up-renv",
    "title": "Foundation of R",
    "section": "Set up renv",
    "text": "Set up renv\nTo use renv for your project\n\nClick Tools > Project Options… > Environments\nTick Use renv with this project\n\nWhich creates renv.lock file and a folder renv in your project"
  },
  {
    "objectID": "intro.html#why-use-renv",
    "href": "intro.html#why-use-renv",
    "title": "Foundation of R",
    "section": "Why use renv?",
    "text": "Why use renv?\n\n\nEncapsulate the development environment of your R projects (R version, packages used and their versions) in a file called renv.lock\nEnsure collaborators to replicate your R project’s development environment by simply running renv::restore()\nIsolate installed packages under project directory for more convenient management. With renv set up, the installed packages are stored under\n\npath_to_project/renv/library/{R-version}/{device-architecture}/\n\n\n\n\n\n\n\n\n\nWhat are packages?\n\n\nAn R package is a shareable bundle of functions. We will frequently use available packages to assist us during coding process."
  },
  {
    "objectID": "intro.html#r-script",
    "href": "intro.html#r-script",
    "title": "Foundation of R",
    "section": "R script",
    "text": "R script\nTo create an R script in RStudio, in the menu section, click File > New File > R Script\nR script is where you store your R code and comments.\nComments are notes to explain your code to other developers (or your future self, when you revisit the code). To comment in R simply add # at the start of your note."
  },
  {
    "objectID": "intro.html#r-script-1",
    "href": "intro.html#r-script-1",
    "title": "Foundation of R",
    "section": "R script",
    "text": "R script\nExample: Some R codes and comment\n\n# this is a comment, and the following code will print Hello world in the console\nprint(\"Hello world\")\n\n[1] \"Hello world\"\n\n# you can also perform computations in R\n# In R, you can denote \n# - multiplication as *\n# - power as **\n# - devision as /\n# - e5 is the shorthand notation for *10**5\n12*10e5 + 313**2 - 11890/2\n\n[1] 12092024"
  },
  {
    "objectID": "intro.html#variable",
    "href": "intro.html#variable",
    "title": "Foundation of R",
    "section": "Variable",
    "text": "Variable\n\nEverything you store in R - datasets, a vector of names, a total population number, even outputs such as graphs - are objects which can be assigned to a variable and can be referenced in later commands.\nIn R, a variable can be created by assigning an object to it using <-\nAs previously mentioned, an object can be a number, string, vector of characters, etc.\n\n# assigning 3.14 to the variable pi_numb\npi_numb <- 3.14\n# which can then be referenced \npi_numb\n\n[1] 3.14\n\n# object can also be a text/characters\ngreeting <- \"Hello World\" # note that it must be contained within quotation marks\ngreeting\n\n[1] \"Hello World\"\n\n# or vector of numbers/ characters\nnumb_list <- c(1,2,3,4,5)\nnumb_list\n\n[1] 1 2 3 4 5\n\nanother_numb_list <- c(1:5) \nanother_numb_list\n\n[1] 1 2 3 4 5\n\nchar_list <- c(\"R\", \"Python\", \"Java\", \"JavaScript\", \"C++\")\nchar_list\n\n[1] \"R\"          \"Python\"     \"Java\"       \"JavaScript\" \"C++\""
  },
  {
    "objectID": "intro.html#variable-1",
    "href": "intro.html#variable-1",
    "title": "Foundation of R",
    "section": "Variable",
    "text": "Variable\nvalue of a variable can also be overridden\n\nvar <- 5\nvar\n\n[1] 5\n\n# override variable\nvar <- \"new value\"\nvar\n\n[1] \"new value\""
  },
  {
    "objectID": "intro.html#classes",
    "href": "intro.html#classes",
    "title": "Foundation of R",
    "section": "Classes",
    "text": "Classes\n\nAll the objects stored in R have a class which tells R how to handle the object. There are many possible classes, but common ones include\n\n\n\n\n\n\n\n\nClasses\nExplanation\nExamples\n\n\n\n\nnumeric\nfor numerical data, including decimals\n3.14, -1000, 10, 2e6, etc.\n\n\nlogical\nfor boolean data (TRUE/FALSE) without quotation marks\nTRUE or FALSE\n\n\ncharacter\nfor text/characters data (also referred to as string)\n\"Hello world\", \"R Cafe\", etc.\n\n\nDate\ndata classified as Date can be displayed and manipulated in special ways\n2024-12-09 , s, etc.\n\n\nfactor\nfor categorical data\ngender: female or male,\neconomic status,\ndistrict, ethnicity, etc.\n\n\ndata.frame\ncommon way for R to store dataset.\nConsists of vectors (columns, each column must be of a specific class) of data bounded together.\n\n\n\ntibble\nan “enhanced” version of data.frame which is less prone to error and printed more nicely in the console"
  },
  {
    "objectID": "intro.html#functions",
    "href": "intro.html#functions",
    "title": "Foundation of R",
    "section": "Functions",
    "text": "Functions\nA function is a reusable sequence of code.\nIt can be created using the syntax\n\nfunction_name <- function(){\n\n# function content\n\n}"
  },
  {
    "objectID": "intro.html#functions-1",
    "href": "intro.html#functions-1",
    "title": "Foundation of R",
    "section": "Functions",
    "text": "Functions\nExample: a simple function\n\nprint_hello <- function(){\n  print(\"Hello world\")\n  print(\"This is R Cafe course\")\n}\n\n# defined function can then be called as followed\nprint_hello()\n\n[1] \"Hello world\"\n[1] \"This is R Cafe course\""
  },
  {
    "objectID": "intro.html#functions-2",
    "href": "intro.html#functions-2",
    "title": "Foundation of R",
    "section": "Functions",
    "text": "Functions\nFunctions can also have parameters, which creates reusable code with dynamic inputs and outputs\nA function with parameters as followed. Note that you can include as many parameters as you want\n\nfunction_name <- function(parameter_1, parameter_2){\n  # function content\n  # values of parameters can be accessed simply calling parameter name\n}"
  },
  {
    "objectID": "intro.html#functions-3",
    "href": "intro.html#functions-3",
    "title": "Foundation of R",
    "section": "Functions",
    "text": "Functions\nExample: simple function\n\ncompute_power <- function(base, power){\n  # return a raised to the power of b\n  base**power\n}\n\ncompute_power(5, 2)\n\n[1] 25"
  },
  {
    "objectID": "intro.html#functions-4",
    "href": "intro.html#functions-4",
    "title": "Foundation of R",
    "section": "Functions",
    "text": "Functions\n\nR is a functional programming language, which means you will encounter a lot of functions while coding in R.\nTo assist users, R also include a built-in documentation system that explains the purpose and usage of each function. To look up a function, use ? or help()\n\n# look up documentation for `sqrt` function\n?sqrt\nhelp(sqrt)\n\nNote that the built-in documentation only helps when you already know which function you want to ask about. If you are looking for a function to achieve a specific task, it is better to start with search engine (Google, Bing, etc.), forums/Q&A sites (Github discussions, StackOverflow, etc.) or even ChatGPT."
  },
  {
    "objectID": "intro.html#functions-5",
    "href": "intro.html#functions-5",
    "title": "Foundation of R",
    "section": "Functions",
    "text": "Functions\n\nThe documentation that show up when calling help() or ? are usually generated from something called roxygen documentation.\nTo create a roxygen documentation, place the cursor within the function and from the menu, click Code > Insert Roxygen Skeleton\n\n#' Compute power\n#' \n#' Takes two arguments, `base` and `power` then return base raised to given power\n#'\n#' @param base - a numeric value for base number\n#' @param power - a numeric value for power\n#'\n#' @return numeric value for base^power\n#' @examples\n#' compute_power(3,4)\ncompute_power <- function(base, power){\n  # return a raised to the power of b\n  base**power\n}\n\ncompute_power(5, 2)\n\n[1] 25"
  },
  {
    "objectID": "intro.html#scope",
    "href": "intro.html#scope",
    "title": "Foundation of R",
    "section": "Scope",
    "text": "Scope\nScope refers to where variables can be accessed or modified.\nTo put simply\n\nBy default, variables can be modified only in the environment in which it was created (unless they were forced to, but it is not recommended).\nglobal variables can be accessed anywhere.\nlocal variables are variables defined in a local environment and can only be accessed within that local environment. The most common local environment you will encounter is environment within a function."
  },
  {
    "objectID": "intro.html#scope-1",
    "href": "intro.html#scope-1",
    "title": "Foundation of R",
    "section": "Scope",
    "text": "Scope\n\n# this is a global variable since it is not created in any local environment\nglobal_var <- 10\n\nexample_func <- function(param){\n  print(paste0(\"Global variable can be accessed within function \", global_var))\n  \n  # this is creating a local variable named global_var\n  # it will not affect global_var\n  global_var <- 20\n  \n  # note that parameters is also only accessible within the function\n  print(paste0(\"Function parameter \", param))\n}\n\nexample_func(60)\n\n[1] \"Global variable can be accessed within function 10\"\n[1] \"Function parameter 60\"\n\nprint(paste0(\"The global variable is not modified \", global_var))\n\n[1] \"The global variable is not modified 10\""
  },
  {
    "objectID": "intro.html#packages",
    "href": "intro.html#packages",
    "title": "Foundation of R",
    "section": "Packages",
    "text": "Packages\n\n2 options to install an R packages\n\nVia RStudio interface.\n\nIn the File/Plots/Packages/Help panel\nClick Packages > Install\nType name of the packages to be installed separated by ,\nClick install\n\nUsing R code\n\nExample: Download package for reading Excel files\n\ninstall.packages(\"readxl\")"
  },
  {
    "objectID": "intro.html#packages-1",
    "href": "intro.html#packages-1",
    "title": "Foundation of R",
    "section": "Packages",
    "text": "Packages\n\nTo use a package, you must first load it to R using library() function\n\nlibrary(readxl)\ndata <- read_excel(\"data/linelist_raw.xlsx\")\nhead(data)"
  },
  {
    "objectID": "intro.html#packages-2",
    "href": "intro.html#packages-2",
    "title": "Foundation of R",
    "section": "Packages",
    "text": "Packages\nSimilar to functions, you can also look up documentation for packages using ? or help()\n\n# --- look up documentation for package ---\n?readxl\nhelp(readxl)\n\n# --- look up documentation for function of the package ---\n?readxl::read_excel\nhelp(read_excel, package= readxl)"
  },
  {
    "objectID": "intro.html#git-and-github",
    "href": "intro.html#git-and-github",
    "title": "Foundation of R",
    "section": "Git and Github",
    "text": "Git and Github\nGit is a distributed version control system, its purpose is to keep track of changes of files under a git repository and provide the capability to revert to previous version.\nGithub is a cloud-based service to host git repository, its main purpose is to store and/or share your project to collaborators."
  },
  {
    "objectID": "intro.html#set-up-version-control-in-rstudio",
    "href": "intro.html#set-up-version-control-in-rstudio",
    "title": "Foundation of R",
    "section": "Set up version control in RStudio",
    "text": "Set up version control in RStudio\nIn the menu\n\nClick Tools > Project Options > Git/SVN\nAt Version Control System, select Git in the drop down\nClick OK"
  },
  {
    "objectID": "intro.html#github-desktop",
    "href": "intro.html#github-desktop",
    "title": "Foundation of R",
    "section": "Github Desktop",
    "text": "Github Desktop\nTo be updated"
  },
  {
    "objectID": "intro.html#recap",
    "href": "intro.html#recap",
    "title": "Foundation of R",
    "section": "Recap",
    "text": "Recap\nAfter today, you have learnt to:\n\nCreate an R project and set up a project environment\nUnderstand R variables and classes, functions, packages\nHow to look up documentations for functions and packages\nHow to upload your project to Github using Github Desktop"
  },
  {
    "objectID": "intro.html#exercise",
    "href": "intro.html#exercise",
    "title": "Foundation of R",
    "section": "Exercise",
    "text": "Exercise\n\nCreate an R project\nInstall packages\n\nInstall package outbreak\n\nCreate your first R Script\n\nCreate an R script in your project\nIn your script, load package outbreak\nLoad a dataset to R\n\nUpload the code to github"
  }
]